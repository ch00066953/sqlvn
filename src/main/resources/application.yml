server:
  port: 8090

logging:
  config: classpath:logback-config.xml
  # 这步是指定生成的日志文件位置
  file: /tmp/log/sqlvn

spring:
  flyway:
    # 开启 flyway
    enabled: true
    # 检测迁移脚本的路径是否存在，如不存在，则抛出异常
    fail-on-missing-locations: true
    # 是否禁用数据库清理 不可修改
    clean-disabled: true
    # SQL 迁移的编码
    encoding: UTF-8
    # 迁移脚本的位置，默认db/migration.
 #  locations: classpath:sqlvn/migration
    locations: filesystem:src\main\resources\sqlvn\migration
    
    # 版本记录信息表
    table: SQLVN_HISTORY
    # SQL 迁移的文件名前缀。 不可修改
    sql-migration-prefix: V
    # SQL 迁移的文件名分隔符。
    sql-migration-separator: __
    # SQL 迁移的文件名后缀。
    sql-migration-suffixes: .sql
    # 是否在执行迁移时自动调用验证。
    validate-on-migrate: false
    # 基线
    baseline-on-migrate: true
    baseline-version: "2025.00"
    
  profiles:
    active: dev
    
  sqlvn:
    # sqlvn的版本号，只执行sqlvn.sql-query-locations下对应版本的脚本。与flyway不同，flyway会执行flyway.locations下所有文件
    version: "2025.01"
    # sqlvn的dql目录，对应生成dml到sql-bak-locations,sql-migration-locations
    sql-query-locations: file:src\main\resources\sqlvn\query
    sql-bak-locations: file:src\main\resources\sqlvn\bak
    sql-migration-locations: file:src\main\resources\sqlvn\migration
    # SQL 备份的文件名前缀。
    sql-query-prefix: dql
    # SQL 备份的文件名后缀。
    sql-query-suffixes: .sql
    #  SQL备份文件,建议启用
    backup-enabled: true
    #  SQL生成迁移文件，建议在开发环境使用自动生成迁移sql并执行验证
    genmigsql-enabled: true
    #  执行迁移,需要迁移的时候开启
    migration-enabled: true
    # action：回滚 rollback/迁移 migration
    # action: rollback
    # sqlvn回滚子版本
    # rollback-version: "20250625_104412"
    # rollback-table-prefix: "SQLVN_ROLLBACK_"